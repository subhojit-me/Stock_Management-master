@model IEnumerable<Stock_Management.Models.ViewModels.StockVm>

@{
    ViewBag.Title = "Product Lists";
}
<!--
using PagedList.Mvc;
using PagedList;
-->
<h2>Available Items in Stocks</h2>

<!--Generating the category dropdown list from viewbag.categoryLIsts-->
<select id="Selectedcategory" name="Selectedcategory">
    <option value="0">All</option>
    @foreach (var item in ViewBag.Categories)
    {
        if (ViewBag.selectedCat == item.Value)
        {
            <option selected="selected" value="@item.Value">
                @item.Text
            </option>
        }
        else
        {
            <option value="@item.Value"> @item.Text </option>
        }
    }
</select>
<br /><br />


@if (!Model.Any())
{
    <h1 class="text-center"> There are no item in Stock</h1>
}
else
{
    <div class="btn btn-default">
        @Html.ActionLink("Add New Stock", "Create", new { @class = "btn btn-default control-label col-md-2" })
    </div>
    <br />
    <br />

    <table id="stock" class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CategoryName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                <th> Operations </th>
            </tr>
        </thead>

        <tbody>
            <!--Jquery pagedlist table that will display the data of products-->
            @foreach (var product in Model)
            {
                <tr>
                    <td>@product.Name</td>

                    <td>@product.CategoryName</td>
                    <td>@product.Description</td>
                    <td>@product.Price</td>
                    <td>@product.Quantity</td>

                    <td>
                        @Html.ActionLink("Edit", "EditProduct", new { id = product.Id }) | 
                        @Html.ActionLink("Delete", "DeleteProduct", new { id = product.Id }, new { @class = "delete", productId = product.Id })
                    </td>

                </tr>
            }
        </tbody>

        <!--Product Table of razor that will be replaced by Jquery PagedList-->
    </table>

    
}   <!--else  ends  -->

@{
    int a = 0;
    foreach (var item in Model)
    {
        if (item.Quantity == 0)
        {
            a++;
        }
    }
}
<br /><hr />
@if (a > 0)
{
    <!--
    <h2>Items with no availablity in stock</h2>

    <table id="Customer" class="table table-bordered table-hover">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            if (item.Quantity == 0)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "EditProduct", new { id = item.Id }) |
                        @Html.ActionLink("Details", "ProductDetails", new { id = item.Id }) |
    @Html.ActionLink("Delete", "DeleteProduct", new { id = item.Id }, new { @class = "delete", productId = item.Id })
    </td>
    </tr>
}
}
    </table>
    -->
}

@section Scripts{
    @Scripts.Render("~/bundles/datatables")

    <script>
        $(document).ready(function () {

            //Call the data-table function.
            $("#stock").DataTable();
            //console.log("Data Table= " + a)


            /*
             *   Selec Products from Selected category
             */
            $("#Selectedcategory").on("change", function () {
                var url = $(this).val();
                //alert("Value= " + url);
                if (url) {
                    window.location = "?catId=" + url;
                }
                return false;
            });

            /*
             * Page delete through JQuery not working
             */
            $("#customers .delete").on("click", function (e) {
                e.preventDefault();
                if (confirm("Are you sure ou want to delete? ")) {
                    var button = $(this);
                    var id = button.attr("productId");
                    console.log("Delete with Id in parameter = " + id);
                    $.ajax({
                        url: "/Stock/DeleteProduct/" + id,
                        method: "GET",
                        success: function () {
                            //alert("call successfully made by ajax");
                            console.log("Removing= " + button.parents("tr"));
                            button.parents("tr").remove();
                        },
                        fail: function () {
                            console.log("Failed in call= " + URL);
                        }
                    });

                }
            });

        });
    </script>
}